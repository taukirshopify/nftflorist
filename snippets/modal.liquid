<style>
  .control-group input {
      display: block;
      width: 100%;
      height: 40px;
  }
  .control-group input:focus-visible{

      outline: none;
      outline-offset: 0;
      box-shadow: none;
  }
  .control-group textarea:focus-visible{

      outline: none;
      outline-offset: 0;
      box-shadow: none;
  }
  .modal__success{
    display:none;
  }
  .modal__fail{
    display:none;
  }
</style>

<div data-customerid="{{ customer.id }}" data-customeremail="{{ customer.email }}" data-ml-modal id="modal-10">
  <a href="#!" class="modal-overlay"></a>
  <div class="modal-dialog modal-dialog-lg">
    <div class="modal-content newspaper">
      <div class="container">
        <h2 class="customer__title text-center">Gift Your NFT Bouquet</h2>
        {% if customer.metafields.custom.current_nft_s_owned.value.giftedHistory.size %}
          <div>
            <label for="previous_gifted"> Select from previously sent to people </label>
            <select id="previous_gifted" style="padding: .75rem 4rem .75rem 1rem" id="previous_gifted">
              <option selected disabled>Select previous client</option>
              {% for item in customer.metafields.custom.current_nft_s_owned.value.giftedHistory %}
                <option data-name="{{ item.name }}" value="{{ item.email }}">
                  {{ item.name }}
                </option>
              {% endfor %}
            </select>
          </div>
        {% endif %}
        <div><p>Or fill new informations</p></div>
        <p class="modal__success">Your gift has been sent succesfully</p>
        <p class="modal__fail">Something went wrong, please refresh the page and try again</p>
        <div class="inputs__container">
          <div class="control-group">
            {% comment %} <label for="firstname">Recipients Name </label> {% endcomment %}
            <input id="firstname" type="text" name="firstname" placeholder="Recipients Name">
          </div>

          <div class="control-group">
            {% comment %} <label for="email">Email Address</label> {% endcomment %}
            <input id="email" type="text" name="email" placeholder="Recipients Email Address">
          </div>
          <div class="control-group">
            {% comment %} <label for="email">Email Address</label> {% endcomment %}
            <textarea
              maxlength="1000"
              id="gs3-textarea-msg"
              name="comment"
              form="usrform"
              placeholder="Message..."
            ></textarea>
            <span id="chars">1000</span> Character(s) Remaining
          </div>
        </div>

        <p class="center">
          <a href="#!" class="btn btn-default submit-gift">submit</a>
          <a href="#!" class="btn btn-default">Close</a>
        </p>
      </div>
    </div>
  </div>
</div>

<script>
  
    
  document.addEventListener("DOMContentLoaded",()=>{
    $("#previous_gifted").on("change",(e)=>{

      var optionSelected = $(e.currentTarget).find("option:selected")
      console.log(optionSelected)
    })
           $("a[href='#modal-10']").click(function() {
          $(".submit-gift").attr("data-lineid",$(this).attr("data-lineid"));
          $(".submit-gift").attr("data-image",$(this).attr("data-image"));
            $('.modal_content').css('display', 'block');
        })
        $('.close_btn').click(function() {
            $('.modal_content').css('display', 'none');
        })
      $(".submit-gift").click((e)=>{
        e.preventDefault();
        function isEmail(email) {
          var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
          return regex.test(email);
        }
        
        const name = $("#firstname").val()
        const email = $("#email").val()
        const message = $("[name='comment']").val()
        let error = false;
        
        if(name.length <= 0) {
          error = true;
          $("#firstname").css("border-color","red")
        }
        if(!isEmail(email)) {
          error = true;
          $("#email").css("border-color","red")
        }
        if(name.length <= 0) {
          error = true;
          $("[name='comment']").css("border-color","red")
        }
        const from = $("[data-customerid]").attr("data-customerid")
        const fromEmail = $("[data-customeremail]").attr("data-customeremail")
        const itemToBeGifted = $(".submit-gift").attr("data-lineid");
        if(!itemToBeGifted) return;
        const withHttp = url => !/^https?:\/\//i.test(url) ? `http:${url}` : url;
        let bouquetImage = withHttp($(".submit-gift").attr("data-image"));
        
        const url = `https://sendgrid.thenftflorist.com/gift?to=${email}&name=${name}&message=${encodeURIComponent(message)}&bouquetImage=${bouquetImage}&from=${from}&item=${itemToBeGifted}&fromEmail=${fromEmail}`
        // const url = `https://18eb-197-205-144-70.ngrok-free.app/gift?to=${email}&name=${name}&message=${encodeURIComponent(message)}&bouquetImage=${bouquetImage}&from=${from}&item=${itemToBeGifted}&fromEmail=${fromEmail}`
        if(error) return;
        console.log("no error")
        fetch(url).then((e)=>{          
          if(!e.ok)     throw new Error('Server error');
          $(".inputs__container").hide()
          $(".submit-gift").hide()
          $(".modal__success").show()
          const transferToBeHidden =$(".submit-gift").attr("data-lineid")
          $(`[data-hideonsuccess='${transferToBeHidden}']`).hide()
          function reloadWithoutHash() {
              // Check if there's a hash in the URL
              if (window.location.hash) {
                // Set the URL without the hash using history.replaceState
                history.replaceState({}, document.title, window.location.pathname + window.location.search);
              }
              // Reload the page
              location.reload();
            }
            
            // Call the function to reload without the hash
            reloadWithoutHash();
          window.location.reload()
        }).catch(err=>{
          $(".modal__fail").show()
          console.log(err)
      })
    });
  })
</script>

<style>
     /* Modals
  ----------------------------------------------*/


  [data-ml-modal] {
  	position:fixed;
  	top:0;
  	bottom:0;
  	left:0;
  	right:0;
  	overflow-x:hidden;
  	overflow-y:auto;
  	-webkit-overflow-scrolling:touch;
  	z-index:999;
  	width:0;
  	height:0;
  	opacity:0;
  }
  [data-ml-modal]:target {
  	width:auto;
  	height:auto;
  	opacity:1;
  	-webkit-transition:  opacity 1s ease;
  	transition: opacity 1s ease;
  }
  [data-ml-modal]:target .modal-overlay {
  	position:fixed;
  	top:0;
  	bottom:0;
  	left:0;
  	right:0;
  	cursor:pointer;
  	background-color:#000;
  	background-color:rgba(0, 0, 0, 0.7);
  	z-index:1;
  }
  [data-ml-modal] .modal-dialog {
  	border-radius:6px;
  	box-shadow:0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);
  	position:relative;
  	width: 90%;
  	max-width:500px;
  	max-height:70%;
  	margin:10% auto;
  	overflow-x:hidden;
  	overflow-y:auto;
  	z-index:2;
  }
  .modal-dialog-lg {max-width:520px !important;}

  [data-ml-modal] .modal-dialog > h3 {
  	background-color:#eee;
  	border-bottom:1px solid #b3b3b3;
  	font-size:24px;
  	font-weight: 400;
  	margin:0;
  	padding:0.8em 56px .8em 27px;
  }
  [data-ml-modal] .modal-content {background:#fff; padding:30px 27px;}
  [data-ml-modal] .modal-close {
    	position:absolute;
  	top:13px;
  	right:13px;
  	color:#0085a6;
  	background-color:#fff;
  	border-radius:50%;
  	height:40px;
  	width:40px;
  	font-size:30px;
  	line-height:37px;
  	text-align:center;
  	-webkit-transition: all .3s ease-in-out;
      transition: all .3s ease-in-out;
  }
  [data-ml-modal] .modal-close:hover {background-color:#0085a6; color:#fff; cursor:pointer;}
  [data-ml-modal] p:first-child, [data-ml-modal] p:last-child {margin:0;}
  @media (max-width:767px) {
  	[data-ml-modal] .modal-dialog {margin:20% auto;}
  }
  /* End Modals ------------------------------*/

  /* General*/

  .center {text-align:center !important;}

  .control-group input {
      display: block;
      width: 100%;
      height: 40px;
      border-radius: 15px;
      border: 1px solid #000;
      padding: 13px;
  }
  .control-group textarea {
      display: block;
      width: 100%;
      padding: 13px;
      border-radius: 15px;
      color: rgb(var(--color-foreground));

  }
  .control-group {
      margin: 11px 0px;
  }
  a.btn.btn-default {
      color: #fff;
      background: #000;
      text-transform: capitalize;
  }
</style>
